name: Build

on:
  push:
    branches:
      - main
      - develop
      - release
    paths-ignore:
      - "README.md"
  pull_request:
    branches:
      - main
      - develop
      - release
    paths-ignore:
      - "README.md"
      - "CHANGELOG.md"

jobs:
  build_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '11', '17' ]
    env:
      JAVA_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"

    name: Build with Java ${{ matrix.java }} in Ubuntu
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'
          java-package: jdk
          architecture: x64
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B -ff -ntp clean install -Dgpg.skip=true

      - name: Publish Code Coverage
        if: github.ref == 'refs/heads/main' && matrix.java == '11'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella

  build_macos:
    runs-on: macos-latest
    strategy:
      matrix:
        java: [ '11', '17' ]
    env:
      JAVA_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"

    name: Build with Java ${{ matrix.java }} in MacOS
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'
          java-package: jdk
          architecture: x64
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B -ff -ntp clean install -Dgpg.skip=true

  build_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        java: [ '11', '17' ]
    env:
      JAVA_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"

    name: Build with Java ${{ matrix.java }} in Windows
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'
          java-package: jdk
          architecture: x64
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B -ff -ntp clean install --% -Dgpg.skip=true

  verify-native:
    name: Verify GraalVM ${{ matrix.java }} compatibility on ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest' ]
        java: [ '17', '21' ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: graalvm/setup-graalvm@v1.2.2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'graalvm-community'

      - name: Install nitrite
        run: mvn -B -ff -ntp clean install "-Dgpg.skip=true" -DskipTests

      - name: Run native tests
        working-directory: ./nitrite-native-tests
        run: mvn -B -ff -ntp -PnativeTest verify
